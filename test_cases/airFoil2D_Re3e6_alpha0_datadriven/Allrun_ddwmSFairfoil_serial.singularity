#!/bin/bash
cd "${0%/*}" || exit             # Run from this directory
. ../../functions             # Singularity run functions

cd ../../solvers/ddwmSimpleFoam_airfoil
singularity exec "../../of2106.sif" bash -c "source $bashrc && wmake"
cd ../../run/airFoil2D_Re3e6_alpha0_datadriven
#------------------------------------------------------------------------------
StartTime=$(date +%s)
if notTest "$@"
then
    model="SpalartAllmaras"

    declare -A yp_grading    
    yp_grading[0.05]=8000
    yp_grading[1]=350
    yp_grading[2]=150
    yp_grading[3.5]=65
    yp_grading[5]=50
    yp_grading[10]=15
    yp_grading[50]=1
    yp_grading[100]=1

    declare -A yp_cell
    yp_cell[0.05]=200
    yp_cell[1]=200
    yp_cell[2]=200
    yp_cell[3.5]=200
    yp_cell[5]=200
    yp_cell[10]=200
    yp_cell[50]=180
    yp_cell[100]=100

    declare -A yp_cell_trail
    yp_cell_trail[0.05]=30
    yp_cell_trail[1]=30
    yp_cell_trail[2]=40
    yp_cell_trail[3.5]=40
    yp_cell_trail[5]=40
    yp_cell_trail[10]=40
    yp_cell_trail[50]=40
    yp_cell_trail[100]=40

    declare -A final_time
    final_time[0.05]=10000
    final_time[1]=10000
    final_time[2]=10000
    final_time[3.5]=5000
    final_time[5]=4000
    final_time[10]=3000
    final_time[50]=2500
    final_time[100]=2500

    for i in "${!yp_grading[@]}"
    do
        echo "Processing model: $model"

        yp=$i
        grading=${yp_grading[$yp]}
        cell=${yp_cell[$yp]}
        cell_trail=${yp_cell_trail[$yp]}
        ft=${final_time[$yp]}
        export yp

        # Make directory for file separation
        mkdir yplus_${yp}

        echo "Mesh: y+ $yp"

        \rm -rf 0 [1-9]*
        \cp -rf 0.orig 0
        
        sed -e "s/GRADING/$grading/g" -e "s/CELL/$cell/g" -e "s/CTRAIL/$cell_trail/g" system/blockMeshDict.template > system/blockMeshDict
        sed -e "s/FINALTIME/$ft/g" system/controlDict.template > system/controlDict
        
        # Add variable for residual limit value
        res=1e-5
        echo "Residual control: $res"        
        
        singularityRun -s ${model}_${yp} blockMesh

        singularityRun -s ${model}_${yp} ddwmSimpleFoam_airfoil
    
        # Change solverInfo.dat to solverInfo.csv
        sed 's/#//g' postProcessing/solverInfo/0/solverInfo.dat > postProcessing/solverInfo/0/solverInfo.csv
        cp postProcessing/solverInfo/0/solverInfo.csv yplus_${yp}/solverInfo_${model}_${yp}.csv
        # Change folder name to preserve each case data
        mv postProcessing postProcessing-${model}_${yp}

        UInf=$(singularity exec $image bash -c "source $bashrc && foamDictionary -entry internalField 0/U | sed 's/^.*(\s*\([^ ]*\).*/\1/g'")
        nuInf=$(singularity exec $image bash -c "source $bashrc && foamDictionary -entry nu constant/transportProperties | sed 's/^.*\s\(.*\);/\1/g'")

        timeDir=$(singularity exec $image bash -c "source $bashrc && foamListTimes -latestTime")

        echo "UInf = $UInf"

        singularity exec $image bash -c "source $bashrc && foamDictionary -entry boundaryField.airfoil.value -value $timeDir/Cx | \
            sed -n '/(/,/)/p' | sed -e 's/[()]//g;/^\s*$/d' > Cx.$$"
        singularity exec $image bash -c "source $bashrc && foamDictionary -entry boundaryField.airfoil.value -value $timeDir/Cy | \
            sed -n '/(/,/)/p' | sed -e 's/[()]//g;/^\s*$/d' > Cy.$$"
        # Save wall shear stress (Cf)
        singularity exec $image bash -c "source $bashrc && foamDictionary -entry boundaryField.airfoil.value -value $timeDir/wallShearStress | \
            sed -n '/(/,/)/p' | sed -e 's/[()]//g;/^\s*$/d' > tau.$$"
        # Save yPlus
        singularity exec $image bash -c "source $bashrc && foamDictionary -entry boundaryField.airfoil.value -value $timeDir/yPlus | \
            sed -n '/(/,/)/p' | sed -e 's/[()]//g;/^\s*$/d' > yp.$$"
        # Save pressure coefficient (Cp)
        singularity exec $image bash -c "source $bashrc && foamDictionary -entry boundaryField.airfoil.value -value $timeDir/'total(p)_coeff' | \
            sed -n '/(/,/)/p' | sed -e 's/[()]//g;/^\s*$/d' > Cp.$$"
    
        # Save to csv file instead of dat file (and delete '#' in front of ccx)
        echo "ccx ccy tau_xx tau_yy tau_zz" > yplus_${yp}/tauw_${model}_${yp}.csv
        paste -d ' ' Cx.$$ Cy.$$ tau.$$ >> yplus_${yp}/tauw_${model}_${yp}.csv
        echo "ccx ccy y+" > yplus_${yp}/yplus_${model}_${yp}.csv
        paste -d ' ' Cx.$$ Cy.$$ yp.$$ >> yplus_${yp}/yplus_${model}_${yp}.csv
        echo "ccx ccy Cp" > yplus_${yp}/Cp_${model}_${yp}.csv
        paste -d ' ' Cx.$$ Cy.$$ Cp.$$ >> yplus_${yp}/Cp_${model}_${yp}.csv
        \rm -f Cx.$$ Cy.$$ tau.$$ yp.$$ Cp.$$

    done
fi
EndTime=$(date +%s)
echo "Total Elapsed Time : $(($EndTime - $StartTime)) seconds"
# -----------------------------------------------------------------------------
